#BlueJ class context
comment0.target=ExperimentController
comment0.text=\r\n\ ExperimentController\ -\ Takes\ input\ files\ and\ creates\ indexes\ of\ the\ input\ file.\ \r\n\ User\ can\ test\ using\ a\ ListIndex,\ TreeIndex,\ and\ HashIndex\r\n\ User\ can\ choose\ between\ different\ input\ files\ \r\n\r\n\ @author\ Claire\ Liu,\ Renee\ Soika,\ and\ Yuqi\ Wang\r\n\ @version\ November\ 21,\ 2020\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ Main\ method\ to\ start\ the\ experiment.\r\n\ @param\ args\ \ commandline\ arguements\ (none)\r\n
comment2.params=dictionaryInput
comment2.target=java.lang.String[]\ readDictionary(java.io.File)
comment2.text=\r\n\ Read\ a\ dictionary\ file\ into\ an\ array.\r\n\ @param\ dictionaryInput\ \ \ input\ file\ for\ the\ dictionary\r\n\ @return\ dictionary\ array\r\n
comment3.params=dictionary
comment3.target=ExperimentController(java.lang.String[])
comment3.text=\r\n\ Creates\ a\ new\ experiment\ controller\ to\ time\ book\ indices.\r\n\ @param\ dictionary\ \ \ \ \ dictionary\ to\ use\ for\ this\ experiment\r\n
comment4.params=
comment4.target=void\ run()
comment4.text=\r\n\ Runs\ the\ experiment\ on\ files\ of\ different\ sizes\ 5\ times.\r\n
comment5.params=input\ index
comment5.target=void\ readAndInsertAll(java.io.File,\ Index)
comment5.text=\r\n\ Reads\ the\ given\ input\ file\ and\ inserts\ words\ and\ line\ numbers\ into\ index.\r\n\ @param\ input\ \ \ \ \ input\ file\ for\ book\r\n\ @param\ index\ \ \ \ \ index\ for\ the\ book\r\n
comment6.params=input\ index
comment6.target=long\ timeToInsert(java.io.File,\ Index)
comment6.text=\r\n\ Times\ how\ long\ it\ takes\ to\ read\ and\ insert\ words\ into\ the\ index.\r\n\ @param\ input\ \ \ \ \ input\ file\r\n\ @param\ index\ \ \ \ \ index\ for\ the\ book\r\n\ @return\ time\ to\ read/insert\ (in\ ms)\ \r\n
comment7.params=output\ index
comment7.target=void\ writeIndexToFile(java.io.File,\ Index)
comment7.text=\r\n\ Writes\ the\ index\ to\ an\ output\ file.\r\n\ @param\ output\ \ \ \ the\ output\ file\r\n\ @param\ index\ \ \ \ \ index\ for\ this\ book\r\n
comment8.params=output\ index
comment8.target=long\ timeToWrite(java.io.File,\ Index)
comment8.text=\r\n\ Times\ how\ long\ it\ takes\ to\ write\ the\ index\ to\ an\ output\ file.\r\n\ @param\ output\ \ \ \ the\ output\ file\r\n\ @param\ index\ \ \ \ \ index\ for\ this\ book\r\n
comment9.params=nums
comment9.target=long\ average(long[])
comment9.text=\r\n\ Computes\ the\ rounded\ average\ of\ longs.\r\n\ @param\ nums\ \ longs\ to\ average\r\n\ @return\ rounded\ long\ average\r\n
numComments=10
